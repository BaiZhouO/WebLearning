-- MySQL Script generated by MySQL Workbench
-- Sat Apr 27 16:44:59 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema buyingsystem
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema buyingsystem
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `buyingsystem` DEFAULT CHARACTER SET utf8 ;
USE `buyingsystem` ;

-- -----------------------------------------------------
-- Table `buyingsystem`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `buyingsystem`.`customer` (
  `cus_id` INT NOT NULL AUTO_INCREMENT,
  `loginName` VARCHAR(45) NOT NULL,
  `loginPassword` VARCHAR(45) NOT NULL,
  `cus_name` VARCHAR(45) NOT NULL,
  `cus_phone` VARCHAR(45) NOT NULL,
  `cus_address` VARCHAR(45) NOT NULL,
  `sex` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cus_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `buyingsystem`.`staff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `buyingsystem`.`staff` (
  `staff_id` INT NOT NULL AUTO_INCREMENT,
  `loginName` VARCHAR(45) NOT NULL,
  `loginPassword` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`staff_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `buyingsystem`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `buyingsystem`.`Product` (
  `prod_id` INT NOT NULL AUTO_INCREMENT,
  `prod_name` VARCHAR(45) NOT NULL,
  `prod_price` DOUBLE NOT NULL,
  `prod_description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`prod_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `buyingsystem`.`inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `buyingsystem`.`inventory` (
  `total_count` INT NOT NULL,
  `total_price` DOUBLE NOT NULL,
  `prod_id` INT NOT NULL,
  PRIMARY KEY (`prod_id`),
  INDEX `fk_inventory_Product_idx` (`prod_id` ASC),
  CONSTRAINT `fk_inventory_Product`
    FOREIGN KEY (`prod_id`)
    REFERENCES `buyingsystem`.`Product` (`prod_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `buyingsystem`.`OrderList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `buyingsystem`.`OrderList` (
  `order_id` INT NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `cus_id` INT NOT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `fk_OrderList_customer1_idx` (`cus_id` ASC),
  CONSTRAINT `fk_OrderList_customer1`
    FOREIGN KEY (`cus_id`)
    REFERENCES `buyingsystem`.`customer` (`cus_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `buyingsystem`.`OrderItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `buyingsystem`.`OrderItems` (
  `order_id` INT NOT NULL,
  `prod_id` INT NOT NULL,
  `prod_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `fk_OrderItems_Order1_idx` (`order_id` ASC),
  INDEX `fk_OrderItems_Product1_idx` (`prod_id` ASC),
  CONSTRAINT `fk_OrderItems_Order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `buyingsystem`.`OrderList` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrderItems_Product1`
    FOREIGN KEY (`prod_id`)
    REFERENCES `buyingsystem`.`Product` (`prod_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `buyingsystem`.`OrderCart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `buyingsystem`.`OrderCart` (
  `Product_prod_id` INT NOT NULL,
  `total_price` DOUBLE NOT NULL,
  `total_count` INT NOT NULL,
  `prod_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Product_prod_id`),
  INDEX `fk_OrderCart_Product1_idx` (`Product_prod_id` ASC),
  CONSTRAINT `fk_OrderCart_Product1`
    FOREIGN KEY (`Product_prod_id`)
    REFERENCES `buyingsystem`.`Product` (`prod_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
